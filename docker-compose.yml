version: '3.9'
services:
  db:
    image: postgres:15
    environment:
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      retries: 5
    ports:
      - "5432:5432"

  rabbitmq:
    image: rabbitmq:3.13-management
    ports:
      - "5672:5672"
      - "15672:15672"

  gateway-api:
    build:
      context: .
      dockerfile: gateway-api/Dockerfile
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    environment:
      DATABASE_URL: postgresql+psycopg2://postgres:postgres@db:5432/postgres
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
    ports:
      - "8000:8000"

  core-payments:
    build:
      context: .
      dockerfile: core-payments/Dockerfile
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    environment:
      DATABASE_URL: postgresql+psycopg2://postgres:postgres@db:5432/postgres
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
      ADAPTER_URL: http://adapter-kora:8000

  adapter-kora:
    build:
      context: .
      dockerfile: adapter-kora/Dockerfile
    environment:
      WEBHOOK_URL: http://webhook-dispatcher:8000/webhooks/kora
    depends_on:
      rabbitmq:
        condition: service_started

  ledger:
    build:
      context: .
      dockerfile: ledger/Dockerfile
    depends_on:
      db:
        condition: service_healthy

  webhook-dispatcher:
    build:
      context: .
      dockerfile: webhook-dispatcher/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_started

  frontend:
    build: ./frontend
    ports:
      - "5173:5173"
    depends_on:
      gateway-api:
        condition: service_started
